#include<iostream>
#include<algorithm>
#include<cstring>
#include<map>
#include<vector>
using namespace std;

void dfs(int v, vector<vector<int>> &matrix, vector<bool> &check)
{
    check[v] = true;
    cout << v << " ";
    for(int i = 0; i < matrix[v - 1].size(); i++)
    {
        if(!check[matrix[v - 1][i]])
        {
            dfs(matrix[v - 1][i], matrix, check);
        }
    }
}

int main()
{
    vector<bool> check(13, false);
    int n;
    cin >> n;
    vector<vector<int>> matrix(n, vector<int> ());
    for(int i = 0; i < n; i++)
    {
        int m;
        cin >> m;
        for(int  j = 0; j < m; j++)
        {
            int x;
            cin >> x;
            matrix[i].push_back(x);
        }
    }
    dfs(1, matrix, check);
	return 0;
}
